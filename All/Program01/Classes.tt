<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    var className = "Building";
    var classComment = "楼盘信息";
    var isAggregateRoot = true;
    var content = 
@"栋座代码									Code									string					
所属楼盘									EstateId									Guid					
建筑街号									AdministrationNo									string					
行政街号									BuildingNo									string					
所在城市									City									Guid					
所属城区									Districts									int					
楼盘用途									BuildingUseType									int					
用途明细									BuildingUseTypeDetail									int					
建筑类型									BuildingType									string					
建筑结构									BuildingStructure									string					
销售许可证号									SalesNo									string					
土地级别									LandLevel									int?					
是否在售									SalingStatus									bool?					
栋座状态									BuildingStatus									BuildingStatus?					
外墙面									OutWall									string					
大堂装饰									Lobby									string					
电梯品牌									Elevator									string					
装修程度									Renovation									int					
门材质									DoorMaterial									string					
外窗材质									OutWallMaterial									string					
供电方式									ElectricMethod									string					
供水方式									WaterMethod									string					
供气方式									GasMethod									string					
供气种类									GasCategory									string					
供暖方式									SupplyHeatingMethod									string					
采暖方式									HeatingMethod									string					
通讯配置									Communication									string					
楼盘安全配备									Safety									string					
小学学区归属									PrimarySchoolDistrict									string					
初中学区归属									MiddleSchoolDistrict									string					
电梯费									ElevatorCost									double?					
物业费									PropertyCost									double?					
参考计税价									ReferenceTaxPrice									double?					
入住率									OccupancyRate									double?					
面积区间									AreaInterval									string					
单价区间									SinglePriceInterval									string					
总价区间									TotalPriceInterval									string					
总户数									HouseNumber									int?					
住宅户数									ResidentialHouseNumber									int?					
商用户数									CommercialHouseNumber									int?					
单元数量									UnitNumber									int?					
总层数									AllFloorNumber									int?					
地上层数									OverGroundFloorNumber									int?					
地下层数									UnderGroundFloorNumber									double?					
物理楼层									FloorBuildingNumber									int?					
标号楼层									FloorNumber									double?					
楼间距									BuildingDistance									double?					
位置									Position									BuildingPosition?					
户型信息									BuildingRoomStyles									List<BuildingRoomStyle>															
责任单位信息									BuildingUnits									List<BuildingUnit>															
价格信息									BuildingPrices									List<BuildingPrice>															
附件信息									BuildingFiles									List<EstateFile>															
";
#>
//-----------------------------------------------------------------------
// <copyright file="<#=className#>.cs" company="Howonder">
//     Copyright © Howonder 2015. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
namespace HSNet.Domain.CRM.Entity
{
    using System;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using HSNet.Domain.CRM.Meta;
    using HSNet.Domain.CRM.Enum;
    using System.Collections.Generic;

    /// <summary>
    /// <#=classComment#>
    /// </summary>
    [MetadataType(typeof(<#=className#>Metadata))]
    public class <#=className#> : <#= isAggregateRoot ? "CommonAggregateRoot, ICommonEntity" : "CommonEntityBase" #>
    {
<#
    var properties = content.Split("\r\n".ToCharArray());
    var formatPropertyType = new Func<string, string>(value => 
    {
        if(value.StartsWith("List<"))
        {
            return "virtual " + value;
        }
         
        return value; 
    });

    foreach(var property in properties.Where(k => !string.IsNullOrWhiteSpace(k)))
    {
        var attrs = property.Split('\t').Where(k => !string.IsNullOrWhiteSpace(k)).ToList();
#>
        /// <summary>
        /// <#=attrs[0]#>
        /// </summary>
        public <#=formatPropertyType(attrs[2])#> <#=attrs[1]#> { get; set; }

<#
    }
#>
    }
}